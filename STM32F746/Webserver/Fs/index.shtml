<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<style>
* {
  box-sizing: border-box;
}
.menu {
  float:left;
  width:48%;
  text-align:center;
  margin:1%;
  
}

.header {

  
}
.button_menu {
  float:right;
  width:100;
  text-align:center;
}

.menu a {
  background-color:#e5e5e5;
  padding:12px;
  margin-top:7px;
  display:block;
  width:100%;
  color:black;
  float:left;
}

.bloc_button {
  background-color:#e5e5e5;
  padding:12px;
  margin-top:7px;
  margin-bottom:7px;
 width:50%;
  
  display:block;
  width:100%;
  color:black;
  
}



@media only screen and (max-width:620px) {
  /* For mobile phones: */
  .menu, .main, .right {
    width:100%;
  }
}

.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch input { 
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: #2196F3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

.buttonON {
  background-color: #4CAF50;
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
  
}

.buttonOFF {
  background-color: red;
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
  }
  .buttonSend {
  background-color: Grey;
  border: none;
  color: white;
  padding: 10px 40%;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
  
}
input[type=text] {
  width: 50%;
  padding: 12px 20px;
  margin: 8px 0;
  box-sizing: border-box;
  border: 3px solid #ccc;
  -webkit-transition: 0.5s;
  transition: 0.5s;
  outline: none;
 
}
input[type=password] {
  width: 50%;
  padding: 12px 20px;
  margin: 8px 0;
  box-sizing: border-box;
  border: 3px solid #ccc;
  -webkit-transition: 0.5s;
  transition: 0.5s;
  outline: none;
 
}
input[type=text]:focus {
  border: 3px solid #555;
  
</style>
</head>
<body style="font-family:Verdana;color:#ffff;">

<div style="background-color:#1f618d;padding:5px;text-align:left;">
<p id="status">Checking status...<p\>
</div>
<div style="background-color:#1f618d;padding:50px;text-align:center;">
<h1 class="connexion">Parameter Config</h1>
</div>

<div class="menu">        
	<div class="bloc_button">   
		<p1>Change IP address</p1>  
	</div> 
	<div width="50%" >
		<p1 style="color:black">IP address:</p1>
	</div>
	<div width="50%" >
		<input  width="100%" type="text" id="IP_text" name="IP_text"  value= "<!--#ip-->" >
	</div>
	<div width="50%" >
		<p1 style="color:black">Mask address:</p1>
	</div>
	<div width="50%" >
		<input  width="100%" type="text" id="Mask_text" name="IP_text"  value="<!--#sub-->"  >
	</div>
	<div width="50%" >
		<p1 style="color:black">Gateway address:</p1>
	</div>
	<div width="50%" >
		<input  width="100%" type="text" id="Gateway_text" name="IP_text" value="<!--#Gaway-->" >
	</div> 
	<input type="button" class="buttonSend" value="update" onclick="ValidateIPaddress()" >	 
</div> 
    
    
<div class="menu">        
	<div class="bloc_button">   
		<p1>Change MQTT Config</p1>  
	</div> 
	<div width="50%" >
		<p1 style="color:black">Server MQTT:</p1>
	</div>
	<div width="50%" >
		<input  width="100%" type="text" id="SERVER_MQTT_text" name="SERVER_MQTT_text"  value= "<!--#sMQ-->" >
	</div>
	<div width="50%" >
		<p1 style="color:black">Port MQTT:</p1>
	</div>
	<div width="50%" >
		<input  width="100%" type="text" id="Port_MQTT_Text" name="Port_MQTT_Text"  value="<!--#pMQ-->"  >
	</div>
	<div width="50%" >
		<p1 style="color:black">Username:</p1>
	</div>
	<div width="50%" >
		<input  width="100%" type="text" id="user_MQTT_text" name="user_MQTT_text" value="<!--#uMQ-->" >
	</div> 
	<div width="50%" >
		<p1 style="color:black">Password:</p1>
	</div>
	<div width="50%" >
		<input  width="100%" type="password" id="Pas_MQTT_Text" name="Pas_MQTT_Text" value="<!--#paMQ-->" >
	</div> 
	<input type="button" class="buttonSend" value="update GET" onclick="sendNewMQTT()" >	 
  <input type="button" class="buttonSend" value="update POST" onclick="sendNewMqttPost()" >	 
</div> 

   


  
<script>

function sendNewMqttPost()
{
var xhttp = new XMLHttpRequest();
var payload = "s="
var server=document.getElementById("SERVER_MQTT_text").value;
var port=document.getElementById("Port_MQTT_Text").value;
var user=document.getElementById("user_MQTT_text").value;
var pass=document.getElementById("Pas_MQTT_Text").value;
payload=payload+server+"&p="+port+"&u="+user+"&pa="+pass;
xhttp.open("POST","/configmqttpost.cgi", true);
xhttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
xhttp.send(payload);
}


function sendNewMQTT()
{
var xhttp = new XMLHttpRequest();
var payload = "configmqtt.cgi?s="
var server=document.getElementById("SERVER_MQTT_text").value;
var port=document.getElementById("Port_MQTT_Text").value;
var user=document.getElementById("user_MQTT_text").value;
var pass=document.getElementById("Pas_MQTT_Text").value;
payload=payload+server+"&p="+port+"&u="+user+"&pa="+pass;
xhttp.open("GET",payload, true);
xhttp.send();
}

function SendNewIP()
{
var xhttp = new XMLHttpRequest();
var payload = "config.cgi?ip="
var IP=document.getElementById("IP_text").value;
var Mask=document.getElementById("Mask_text").value;
var Gateway=document.getElementById("Gateway_text").value;
payload=payload+IP+"&sub="+Mask+"&gaway="+Gateway;
xhttp.open("GET",payload, true);
xhttp.send();
}
window.onload = RefreshState;

function ValidateIPaddress()
 {
 var ipformat = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;
 if(document.getElementById("IP_text").value.match(ipformat) && document.getElementById("Mask_text").value.match(ipformat) && document.getElementById("Gateway_text").value.match(ipformat) && document.getElementById("IP_text").value.length==15 && document.getElementById("IP_text").value.length==15 && document.getElementById("IP_text").value.length==15)
 {
 SendNewIP();
 
 }
 else
 {
 alert("You have entered an invalid IP address!");
 document.form1.text1.focus();return false;
 }
 }
</script>
 



</body>
</html>
